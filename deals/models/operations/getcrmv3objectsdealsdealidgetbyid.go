// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/hubspot-go/deals/internal/utils"
	"github.com/speakeasy-sdks/hubspot-go/deals/models/components"
)

type GetCrmV3ObjectsDealsDealIDGetByIDSecurity struct {
	Oauth2      *string `security:"scheme,type=oauth2,name=Authorization"`
	PrivateApps *string `security:"scheme,type=apiKey,subtype=header,name=private-app"`
}

func (o *GetCrmV3ObjectsDealsDealIDGetByIDSecurity) GetOauth2() *string {
	if o == nil {
		return nil
	}
	return o.Oauth2
}

func (o *GetCrmV3ObjectsDealsDealIDGetByIDSecurity) GetPrivateApps() *string {
	if o == nil {
		return nil
	}
	return o.PrivateApps
}

type GetCrmV3ObjectsDealsDealIDGetByIDRequest struct {
	DealID string `pathParam:"style=simple,explode=false,name=dealId"`
	// A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.
	Properties []string `queryParam:"style=form,explode=true,name=properties"`
	// A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.
	PropertiesWithHistory []string `queryParam:"style=form,explode=true,name=propertiesWithHistory"`
	// A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.
	Associations []string `queryParam:"style=form,explode=true,name=associations"`
	// Whether to return only results that have been archived.
	Archived *bool `default:"false" queryParam:"style=form,explode=true,name=archived"`
	// The name of a property whose values are unique for this object type
	IDProperty *string `queryParam:"style=form,explode=true,name=idProperty"`
}

func (g GetCrmV3ObjectsDealsDealIDGetByIDRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetCrmV3ObjectsDealsDealIDGetByIDRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetCrmV3ObjectsDealsDealIDGetByIDRequest) GetDealID() string {
	if o == nil {
		return ""
	}
	return o.DealID
}

func (o *GetCrmV3ObjectsDealsDealIDGetByIDRequest) GetProperties() []string {
	if o == nil {
		return nil
	}
	return o.Properties
}

func (o *GetCrmV3ObjectsDealsDealIDGetByIDRequest) GetPropertiesWithHistory() []string {
	if o == nil {
		return nil
	}
	return o.PropertiesWithHistory
}

func (o *GetCrmV3ObjectsDealsDealIDGetByIDRequest) GetAssociations() []string {
	if o == nil {
		return nil
	}
	return o.Associations
}

func (o *GetCrmV3ObjectsDealsDealIDGetByIDRequest) GetArchived() *bool {
	if o == nil {
		return nil
	}
	return o.Archived
}

func (o *GetCrmV3ObjectsDealsDealIDGetByIDRequest) GetIDProperty() *string {
	if o == nil {
		return nil
	}
	return o.IDProperty
}

type GetCrmV3ObjectsDealsDealIDGetByIDResponse struct {
	HTTPMeta components.HTTPMetadata
	// successful operation
	SimplePublicObjectWithAssociations *components.SimplePublicObjectWithAssociations
	Body                               []byte
}

func (o *GetCrmV3ObjectsDealsDealIDGetByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetCrmV3ObjectsDealsDealIDGetByIDResponse) GetSimplePublicObjectWithAssociations() *components.SimplePublicObjectWithAssociations {
	if o == nil {
		return nil
	}
	return o.SimplePublicObjectWithAssociations
}

func (o *GetCrmV3ObjectsDealsDealIDGetByIDResponse) GetBody() []byte {
	if o == nil {
		return nil
	}
	return o.Body
}
